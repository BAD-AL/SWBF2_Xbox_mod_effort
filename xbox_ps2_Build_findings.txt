xbox/ps2 findings:
1. cracked open 'data_ABC/_BUILD/munge_all.bat'; Found the contents to be: 
    @call ps2_munge.bat %*
	@call pc_munge.bat %*
	@call xbox_munge.bat %*
Only the xbox and ps2 munge.bat files didn't exist.
Looking at how simple the pc_munge.bat file was "@call munge.bat /platform pc %*", they were easily created. (same process with xbox_clean.bat, ps2_clean.bat)

After running the new "xbox_munge.bat" file, there were several errors:
	'XBOX_texturemunge' is not recognized as an internal or external command, operable program or batch file. (many times)
	'XBOX_modelmunge' is not recognized as an internal or external command, operable program or batch file.   (many times)
	'XBOX_shadermunge' is not recognized as an internal or external command, operable program or batch file.  (many times)
	Unable to munge C:\BF2_ModTools\data_ABC\sound\worlds\hero as it doesn't exist                            (also occured on pc_munge)
	'xbcp' is not recognized as an internal or external command, operable program or batch file.              (looks like it is just a command to copy files over to an XBOX)
	ERROR[levelpack shell.req]:Input file shell.req does not exist. [continuing]
	Stuff like:
	soundflmunge.exe : Error : Unable to open file streams\Amb_JediCouncil01_fnt.wav  - while munging C:\BF2_ModTools\data_ABC\Sound\worlds\cor\cor1.st4
	soundflmunge.exe : Error : Unable to read file list C:\BF2_ModTools\data_ABC\Sound\worlds\dag\dag1.st4  - while munging C:\BF2_ModTools\data_ABC\Sound\worlds\dag\dag1.st4
	soundflmunge.exe : Error : Unable to open file ..\..\global\effects\saberon.wav  - while munging C:\BF2_ModTools\data_ABC\Sound\worlds\dea\dea1cw.sfx
	
'C:\BF2_ModTools\ToolsFL\bin' directory
I saw that 'ps2_texturemunge.exe' and 'pc_texturemunge.exe' were the same size, did a binary compare and they were exactly the same! 
 (same deal with 'pc_ModelMunge.exe' & 'ps2_ModelMunge.exe')
So seems like you can just copy & rename 'pc_texturemunge.exe' to 'xbox_texturemunge.exe'.
There was no 'ps2_ShaderMunge.exe' but copy & rename 'pc_ShaderMunge.exe' to 'xbox_ShaderMunge.exe' anyway...

There is a reference to a tool called 'XLAST' in the 'data_ABC/Readme.txt' file and talks about using it to create XBOX live DLC.
Seems to mean 'Xbox Live Authoring and Submission Tool'. Downloaded an installer that seems to contain it (Downloads\xb360modder4.zip).
Not sure if it's necessary for getting content onto Xbox.

In the 'addme.lua' file the following line: 'ReadDataFile("..\\..\\addon\\ABC\\data\\_LVL_PC\\core.lvl")' was changed to:
	if(gPlatformStr == "PC") then
		ReadDataFile("..\\..\\addon\\ABC\\data\\_LVL_PC\\core.lvl")
	else if (gPlatformStr == "XBox") then
		--Something?
	end

	
	
The Xbox version had an update to the game which was downloaded to "UPDATE: /E/TDATA/4c41001a/$u/".
It consisted of the following files:
	$u\contentmeta.xbx
	$u\data
	$u\default.xbe
	$u\downloader.xbe
	$u\manifest
	$u\data\_lvl_xbox
	$u\data\_lvl_xbox\common.lvl
	$u\data\_lvl_xbox\core.lvl
	$u\data\_lvl_xbox\ingame.lvl
	$u\data\_lvl_xbox\shell.lvl
I overwrote the corresponding files the game shipped with and it all seemed to run fine (default.xbe,downloader.xbe,common.lvl,core.lvl,ingame.lvl,shell.lvl)

Modifying anything in the DLC folder seems to cause the game that data is corrupted and the files get blown away.

They use luac 5.0.2, compile with option -s; when they 'munge' looks like they use add some header info and some zeros at the end.

-- adding entries to the 

local sp_n = 0
local mp_n = 0
sp_n = table.getn(sp_missionselect_listbox_contents)
sp_missionselect_listbox_contents[sp_n+1] = { isModLevel = 1, mapluafile = "BCA%s_%s", era_g = 1, era_c = 1, mode_con_g = 1, mode_con_c  = 1, mode_ctf_g = 1, mode_ctf_c  = 1, mode_1flag_g = 1, mode_1flag_c  = 1, mode_eli_g = 1,}
mp_n = table.getn(mp_missionselect_listbox_contents)
mp_missionselect_listbox_contents[mp_n+1] = sp_missionselect_listbox_contents[sp_n+1]

-- see 'assets\Shell\scripts\missionlist.lua' for more info on the mission select lists
local levels = { 
  { mapluafile = "bes2%s_%s", era_g = 1, era_c = 1, mode_con_g = 1, mode_con_c  = 1, mode_ctf_g = 1, mode_ctf_c  = 1, mode_1flag_g = 1, mode_1flag_c  = 1, mode_eli_g = 1,},
  { mapluafile = "cor1%s_%s", era_g = 1, era_c = 1, mode_con_g = 1, mode_con_c  = 1, mode_ctf_g = 1, mode_ctf_c  = 1, mode_1flag_g = 1, mode_1flag_c  = 1, mode_eli_g = 1,},
  { mapluafile = "myg1%s_%s", era_g = 1, era_c = 1, mode_con_g = 1, mode_con_c  = 1, mode_ctf_g = 1, mode_ctf_c  = 1, mode_1flag_g = 1, mode_1flag_c  = 1, mode_eli_g = 1,},
  { mapluafile = "nab2%s_%s", era_g = 1, era_c = 1, mode_con_g = 1, mode_con_c  = 1, mode_ctf_g = 1, mode_ctf_c  = 1, mode_1flag_g = 1, mode_1flag_c  = 1, mode_eli_g = 1,},
  { mapluafile = "rhn1%s_%s", era_g = 1, era_c = 1, mode_con_g = 1, mode_con_c  = 1, mode_ctf_g = 1, mode_ctf_c  = 1, mode_1flag_g = 1, mode_1flag_c  = 1, mode_eli_g = 1,},
  { mapluafile = "rhn2%s_%s", era_g = 1, era_c = 1, mode_con_g = 1, mode_con_c  = 1, mode_ctf_g = 1, mode_ctf_c  = 1, mode_1flag_g = 1, mode_1flag_c  = 1, mode_eli_g = 1,},
  { mapluafile = "yav2%s_%s", era_g = 1, era_c = 1, mode_con_g = 1, mode_con_c  = 1, mode_ctf_g = 1, mode_ctf_c  = 1, mode_1flag_g = 1, mode_1flag_c  = 1, mode_eli_g = 1,},
  -- new levels after here 
  { mapluafile = "ABC%s_%s", era_g = 1, era_c = 1, mode_con_g = 1, mode_con_c  = 1, mode_ctf_g = 1, mode_ctf_c  = 1, mode_1flag_g = 1, mode_1flag_c  = 1, mode_eli_g = 1, isModLevel = 1, },
 }
 
 for i=1, table.getn( levels) do
	sp_n = table.getn(sp_missionselect_listbox_contents)
	mp_n = table.getn(mp_missionselect_listbox_contents)
	sp_missionselect_listbox_contents[sp_n+1] = levels[i]
	mp_missionselect_listbox_contents[mp_n+1] = levels[i]
 end

ScriptCB_IsFileExist(filePath) -- function tests if file exists.
 
mission.lvl - Contains the different missions for the levels like 'bes2c_con' (compiled lua file)

shell/memu interface programming tutorial:
http://gametoast.com/viewtopic.php?f=27&t=32145

Replacing menu files in lvl file; had success when the resulting luac code was the same size; froze on load when 1 byte off. (ifs_main.lua)

dofile("f.lua") -- works on PC, not on xbox
require("f")    -- works on PC, not on xbox
Cannot write to files on PC or xbox

How to make a custom .lvl src file?
scriptmunge -inputfile $*.lua -checkdate -continue -platform XBOX -sourcedir  ..\..\Common -outputdir MUNGED\XBOX  2>>"C:\BF2_ModTools\data_ABC\_BUILD\XBOX_MungeLog.txt" 
@REM ===== Build LVL files
levelpack -inputfile shell.req -common ..\Common\MUNGED\%MUNGE_PLATFORM%\core.files ..\Common\MUNGED\%MUNGE_PLATFORM%\common.files %MUNGE_ARGS% -sourcedir %SOURCE_DIR% -inputdir %MUNGE_DIR% -outputdir %OUTPUT_DIR% 2>>%MUNGE_LOG%
levelpack -inputfile common.req -writefiles MUNGED\XBOX\common.files -common MUNGED\XBOX\core.files -checkdate -continue -platform XBOX -sourcedir  ..\..\Common -inputdir MUNGED\XBOX -outputdir ..\..\_LVL_XBOX  2>>"C:\BF2_ModTools\data_ABC\_BUILD\XBOX_MungeLog.txt" 



Loading code:
ReadDataFile("MoreStuff.lvl")
ScriptCB_DoFile("FileName") -- from 'MoreStuff.lvl'
